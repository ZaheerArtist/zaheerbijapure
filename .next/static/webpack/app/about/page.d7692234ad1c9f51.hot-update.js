"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/about/page",{

/***/ "(app-pages-browser)/./app/utils/imagePathFixer.ts":
/*!*************************************!*\
  !*** ./app/utils/imagePathFixer.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateImageFallbacks: function() { return /* binding */ generateImageFallbacks; },\n/* harmony export */   handleImageError: function() { return /* binding */ handleImageError; },\n/* harmony export */   repoPrefix: function() { return /* binding */ repoPrefix; }\n/* harmony export */ });\n/**\r\n * Utility functions to help fix image paths at runtime\r\n */ // Repository prefix for GitHub Pages\nconst repoPrefix = \"/zaheerbijapure\";\n/**\r\n * Attempts to fix an image path by trying multiple variations\r\n * @param originalPath The original image path that failed to load\r\n * @param category Optional category for specialized handling (e.g., 'films', 'profile')\r\n * @returns An array of fallback paths to try\r\n */ function generateImageFallbacks(originalPath, category) {\n    const fallbacks = [];\n    // First, add the original path to the array\n    fallbacks.push(originalPath);\n    // Parse the filename from the path\n    const pathParts = originalPath.split(\"/\");\n    const filename = pathParts[pathParts.length - 1];\n    const filenameWithoutExt = filename.split(\".\")[0];\n    // Try different path formations\n    if (category === \"films\") {\n        // For films category, try different directories and formats\n        const folderVariations = [\n            \"\".concat(repoPrefix, \"/thumbnail/\"),\n            \"\".concat(repoPrefix, \"/Films/\"),\n            \"\".concat(repoPrefix, \"/images/Films/\"),\n            \"/thumbnail/\",\n            \"/Films/\",\n            \"/images/Films/\",\n            \"thumbnail/\",\n            \"Films/\"\n        ];\n        const extensionVariations = [\n            \".jpg\",\n            \".JPG\",\n            \".jpeg\",\n            \".JPEG\",\n            \".png\",\n            \".PNG\"\n        ];\n        // Try all variations of paths and extensions\n        folderVariations.forEach((folder)=>{\n            extensionVariations.forEach((ext)=>{\n                fallbacks.push(\"\".concat(folder).concat(filenameWithoutExt).concat(ext));\n                // Also try lowercase filename\n                fallbacks.push(\"\".concat(folder).concat(filenameWithoutExt.toLowerCase()).concat(ext));\n            });\n        });\n    } else if (category === \"profile\") {\n        // For profile images, try standard web paths\n        fallbacks.push(\"\".concat(repoPrefix, \"/thumbnail/profile.jpg\"));\n        fallbacks.push(\"\".concat(repoPrefix, \"/images/profile.jpg\"));\n        fallbacks.push(\"\".concat(repoPrefix, \"/profile.jpg\"));\n        fallbacks.push(\"/thumbnail/profile.jpg\");\n        fallbacks.push(\"/images/profile.jpg\");\n    }\n    // If filename has a year pattern like '-2021', try without it\n    const yearPattern = /-\\d{4}$/;\n    if (yearPattern.test(filenameWithoutExt)) {\n        const nameWithoutYear = filenameWithoutExt.replace(yearPattern, \"\");\n        fallbacks.push(\"\".concat(repoPrefix, \"/thumbnail/\").concat(nameWithoutYear, \".jpg\"));\n        fallbacks.push(\"/thumbnail/\".concat(nameWithoutYear, \".jpg\"));\n    }\n    // Default placeholder as last resort\n    fallbacks.push(\"\".concat(repoPrefix, \"/thumbnail/placeholder.jpg\"));\n    fallbacks.push(\"\".concat(repoPrefix, \"/images/placeholder.jpg\"));\n    fallbacks.push(\"/thumbnail/placeholder.jpg\");\n    // Remove duplicates\n    return fallbacks.filter((path, index)=>fallbacks.indexOf(path) === index);\n}\n/**\r\n * Handles image load errors by trying multiple fallback paths\r\n * @param event The error event\r\n * @param title Optional title for specialized handling\r\n */ function handleImageError(event, title) {\n    const img = event.currentTarget;\n    const currentSrc = img.src;\n    // Try different path variations\n    const paths = [\n        \"/thumbnail/\".concat(title, \".jpg\"),\n        \"/images/\".concat(title, \".jpg\"),\n        \"/thumbnail/\".concat(title === null || title === void 0 ? void 0 : title.toLowerCase(), \".jpg\"),\n        \"/images/\".concat(title === null || title === void 0 ? void 0 : title.toLowerCase(), \".jpg\"),\n        \"/thumbnail/placeholder.jpg\"\n    ];\n    // Find the next path to try\n    const currentIndex = paths.findIndex((path)=>currentSrc.includes(path));\n    const nextIndex = currentIndex + 1 < paths.length ? currentIndex + 1 : 0;\n    if (nextIndex < paths.length) {\n        console.log(\"Trying alternative path for \".concat(title, \": \").concat(paths[nextIndex]));\n        img.src = paths[nextIndex];\n    } else {\n        console.log(\"All paths exhausted, using fallback styling\");\n        img.style.opacity = \"1\";\n        img.style.backgroundColor = \"#1e293b\";\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/imagePathFixer.ts\n"));

/***/ })

});